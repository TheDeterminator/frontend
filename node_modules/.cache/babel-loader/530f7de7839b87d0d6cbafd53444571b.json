{"ast":null,"code":"import _classCallCheck from \"/Users/xavier/Lambda School/Build Week/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xavier/Lambda School/Build Week/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xavier/Lambda School/Build Week/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xavier/Lambda School/Build Week/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xavier/Lambda School/Build Week/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/xavier/Lambda School/Build Week/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/xavier/Lambda School/Build Week/frontend/src/views/DonorHome.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  width: 80%;\\n  justify-content: center;\\n  margin: 0 auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { getGlobalStories } from '../actions';\nimport GridviewComponent from '../components/GridviewComponent';\nvar GridviewContainer = styled.div(_templateObject());\n\nvar DonorHome =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DonorHome, _React$Component);\n\n  function DonorHome(props) {\n    _classCallCheck(this, DonorHome);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DonorHome).call(this, props));\n  }\n\n  _createClass(DonorHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('start of componene did mount');\n      var token = localStorage.getItem('jwt');\n      var options = {\n        header: {\n          Authorization: token\n        }\n      };\n      console.log(options);\n      this.props.getGlobalStories(options);\n      console.log(this.props.globalStories);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.globalStories ? React.createElement(GridviewContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.globalStories.map(function (story) {\n        return React.createElement(GridviewComponent, {\n          key: story.id,\n          story: story,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Loading Data...\"));\n    }\n  }]);\n\n  return DonorHome;\n}(React.Component);\n\nvar mstp = function mstp(state) {\n  return {\n    globalStories: state.globalStories\n  };\n};\n\nexport default connect(mstp, {\n  getGlobalStories: getGlobalStories\n})(DonorHome);","map":{"version":3,"sources":["/Users/xavier/Lambda School/Build Week/frontend/src/views/DonorHome.js"],"names":["React","styled","connect","getGlobalStories","GridviewComponent","GridviewContainer","div","DonorHome","props","console","log","token","localStorage","getItem","options","header","Authorization","globalStories","map","story","id","Component","mstp","state"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,YAA/B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,IAAMC,iBAAiB,GAAGJ,MAAM,CAACK,GAAV,mBAAvB;;IASMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA,kFACVA,KADU;AAEjB;;;;wCAEkB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAd;AACA,UAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AACNC,UAAAA,aAAa,EAAEL;AADT;AADM,OAAhB;AAKAF,MAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,WAAKN,KAAL,CAAWL,gBAAX,CAA4BW,OAA5B;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWS,aAAvB;AACD;;;6BAEO;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,KAAL,CAAWS,aAAX,GAA2B,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACzB,KAAKT,KAAL,CAAWS,aAAX,CAAyBC,GAAzB,CAA6B,UAAAC,KAAK;AAAA,eAAI,oBAAC,iBAAD;AAAmB,UAAA,GAAG,EAAEA,KAAK,CAACC,EAA9B;AAAkC,UAAA,KAAK,EAAED,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAlC,CADyB,CAA3B,GAEsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHzB,CADF;AAOD;;;;EA1BqBnB,KAAK,CAACqB,S;;AA6B9B,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,SAAO;AACLN,IAAAA,aAAa,EAAEM,KAAK,CAACN;AADhB,GAAP;AAGD,CAJD;;AAMA,eAAef,OAAO,CAACoB,IAAD,EAAO;AAACnB,EAAAA,gBAAgB,EAAEA;AAAnB,CAAP,CAAP,CAAoDI,SAApD,CAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {connect} from 'react-redux';\nimport {getGlobalStories} from '../actions';\nimport GridviewComponent from '../components/GridviewComponent';\n\nconst GridviewContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 80%;\n  justify-content: center;\n  margin: 0 auto;\n`\n\nclass DonorHome extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  componentDidMount(){\n    console.log('start of componene did mount');\n    const token = localStorage.getItem('jwt');\n    const options = {\n      header: {\n        Authorization: token\n      }\n    }\n    console.log(options);\n    this.props.getGlobalStories(options);\n    console.log(this.props.globalStories);\n  }\n\n  render(){\n    return (\n      <div>\n        {this.props.globalStories ? <GridviewContainer>\n          {this.props.globalStories.map(story => <GridviewComponent key={story.id} story={story}/>)}\n        </GridviewContainer> : <div>Loading Data...</div>}\n      </div>\n    );\n  }\n}\n\nconst mstp = (state) => {\n  return {\n    globalStories: state.globalStories\n  };\n}\n\nexport default connect(mstp, {getGlobalStories: getGlobalStories})(DonorHome);\n"]},"metadata":{},"sourceType":"module"}